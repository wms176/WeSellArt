/*
All commands are based on the design document.
Written by Elwood


*/
/*
userid ,username, firstname,lastname and all address fields.  length set arbitrarily.
email set to the maximum length a valid email can be.
password is a placeholder, which will vary based on what hashing method we use. is set to 32, to hold a md5 hash as a hexidecimal value. 

*/
CREATE TABLE users (
  userID INT(10) NOT NULL auto_increment,
  username VARCHAR(10),
  email VARCHAR(254),
  password VARCHAR(32),
  firstName VARCHAR(10),
  lastName VARCHAR(10),
  address VARCHAR(50),
  city VARCHAR(20),
  state VARCHAR(20),
  zip int(5),
  admin BOOL DEFAULT FALSE,
  PRIMARY KEY (userID)
);

/*Size of price is intended to fit one order of magnitde larger than the highest price a piece of art has ever sold for.

everything else is set arbitrarily

note I had to change medium to media because medium is a keyword in sql.
*/
CREATE TABLE art(
  artID INT(10) auto_increment,
  artist VARCHAR(50),
  title VARCHAR(50),
  creationDate DATE,
  media VARCHAR(50),
  price DECIMAL(10, 2),
  quantity INT(7),
  PRIMARY KEY (artID)
);

/*
order and timestamp had to be changed as both were keywords in SQL.
Length of orderID was set arbitrarily
*/
CREATE TABLE orders(
  orderID int(10) auto_increment,
  timeoforder TIMESTAMP,
  userID int(10),
  itemsBought VARCHAR(200),
  PRIMARY KEY (orderID),
  FOREIGN KEY (userID) REFERENCES users(userID)
);


/*
I'm uncertain how we intended this to work when we wrote it. I assume we'll have items be a space delineated list of artwork ID's
*/
CREATE TABLE cart(
  cartID int(10),
  items VARCHAR(200),
  total DECIMAL(10,2),
  userID int(10),
  PRIMARY KEY (cartID),
  FOREIGN KEY (userID) REFERENCES users(userID)
);